quit
[].class.name
[].class
[]
self.name
self
name
c
quit
options.foreign_key
options.primary_key
options
self.class
self.id
self.name
self.columns
self
Cat
self.send(options.foreign_key)
self
options.send(:foreign_key)
options
n
options
quit
options.send(:model_class)
options.model_class.where(id: foreign_key)
options.model_class
options
n
quit
options.model_class
options.send(:foreign_key)
options
n
s
options
n
options
name
c
self.class.columns.include?(attr_name.to_sym)
self.class.columns
params
attr_name
attr_sym
s
c
n
quit
continue
self.send("#{attr_sym}=", attr_value)
self.send(attr_sym, attr_value)
attr_sym
self.class.columns.include?(attr_sym)
self.class.columns
self.class
n
attr_value
attr_name
params
s
params
quit
self.instance_variable_get("@#{name}")
self.instance_variable_get(":@#{name}")
self.instance_variable_get(name)
name
s
quit
n
quit
":@#{name}"
"#{name}"
name
s
quit
self.instance_variable_get(:@x)
self.instance_variable_get(:x)
name
s
names
quit
n
names
continue
a
b
s
self.methods
self.:x
self.x
self
a
n
a
s
c
n
s
names
continue
MyAttrAccessorObject.methods - Class.methods
n
MyAttrAccessorObject.methods - Class.methods
MyAttrAccessorObject.methods
MyAttrAccessorObject
define_method(:x) {self.instance_variable_get(:x)}
defind_method(:x) {self.instance_variable_get(:x)}
self
defind_method(:x) do
name
s
names
continue
AttrAccessorObject.methods - Class.methods
n
AttrAccessorObject.methods - Class.methods
n
AttrAccessorObject.methods - Class.methods
n
AttrAccessorObject.methods - Class.methods
AttrAccessorObject.class.superclass
AttrAccessorObject.class
AttrAccessorObject.methods
n
names
